% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/charmatch_loop.R
\name{charmatch_loop}
\alias{charmatch_loop}
\title{Iterative partial string matching with updates.}
\usage{
charmatch_loop(x, table)
}
\arguments{
\item{x}{The character string that we would like to update.}

\item{table}{The character string containing the information to be
used when updating \code{x}.}
}
\value{
A revised version of \code{x} will be returned, in which
    the components might have been attempted updated against the
    content of \code{table}.  The result will contain any
    attributes \code{x} already had, and it will moreover receive a
    new attribute \code{charmatch_loop}, which will be a list
    containing the following items:

\describe{

\item{x}{The original \code{x}-argument as given to the function.}

\item{table}{The original \code{table}-argument as given to the
    function.}

\item{status}{A vector that encodes the different components of the
    result. \code{-1} is used to mark a component of \code{x} that
    did not occur in \code{table}; \code{0} is used to mark
    ambiguous components where several possible matches still are
    present in \code{table}; \code{1} represents components where
    unique match were obtained}

\item{problems}{A logical value that is \code{TRUE} if any
    ambiguous components where detected}

\item{ambiguous}{A list that specifies the whose names are the
    ambiguous components from the result, and whose content will be
    the components from \code{table} that makes it ambiguous.
    Note: This part is only included if ambiguous components are
    detected.}


\item{ambiguous_info}{The same information as in \code{ambiguous},
    but presented as a vector with one character-string for each
    ambiguous component.  This simplifies the creation of an
    error-message in functions that requires that no ambiguous
    components remains, like e.g. \code{update_call} and
    \code{update_formals}.  Note: This part is only included if
    ambiguous components are detected.}
}
}
\description{
This function builds on \code{charmatch}, but with the twist that
it updates the first vector \code{x} based on the information found
in the second vector \code{table}.  A \code{while}-construction is
used in the updating procedure, in order to successively reduce the
length of the the two vectors by ignoring parts that already was
matched.  Note that this function only accept character-vectors as
input, and that it will get rid of duplicated entries from the
\code{table}-argument.  This function was originally created as a
helper for the functions \code{update_call} and
\code{update_formals}, but it might be of interest for other too
since the result contains some attributes that can be handy to use
in tests that compare the content of \code{x} against \code{table}.
}

